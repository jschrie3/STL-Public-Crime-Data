#----------The following Script reads each of the individual files and stores them in a format that can be used by ggmap---------
#loading Required Library's
library(dplyr)
library(data.table)
library(sf)
library(tidyverse)
library(ggmap)
library(here)
#The following code reads each one of the individual files and merges them into a single file
myMergedData<-fread(here('DataFiles/Clean Files','Mergeddata2018.csv'))
mapready<-myMergedData%>%select(coded_month,description,x_coord,y_coord)
library(compstatr)
myMergedData<-fread(here('DataFiles/Clean Files','Mergeddata2018.csv'))
mapready<-myMergedData%>%select(coded_month,description,x_coord,y_coord)
mapready<-mapready%>%filter(x_coord!=0) #Getting rid of values where the Xcoord is 0
test<-cs_missingXY(myMergedData,varX = x_coord,varY = y_coord,newVar=missing
test<-cs_missingXY(myMergedData,varX = x_coord,varY = y_coord,newVar=missing)
test<-cs_missingXY(myMergedData,varX = x_coord,varY = y_coord)
test<-cs_missingXY(myMergedData,varX = x_coord,varY = y_coord,newVar = missing())
View(test)
table(janHomicides$missing)
table(test$missing)
library(mapview)
install.packages('mapview')
library(mapview)
library(mapview)
mapview(mapready)
?cs_filter_count
test<-cs_filter_count(mapready)
test<-cs_filter_count(mapready,var = Count)
View(mapready)
#----------The following Script reads each of the individual files and stores them in a format that can be used by ggmap---------
#loading Required Library's
library(dplyr)
library(data.table)
library(sf)
library(tidyverse)
library(ggmap)
library(here)
library(compstatr)
library(mapview)
#The following code reads each one of the individual files and merges them into a single file
myMergedData<-fread(here('DataFiles/Clean Files','Mergeddata2018.csv'))
#----------The following Script reads each of the individual files and stores them in a format that can be used by ggmap---------
#loading Required Library's
library(dplyr)
library(data.table)
library(sf)
library(tidyverse)
library(ggmap)
library(here)
library(compstatr)
library(mapview)
#The following code reads each one of the individual files and merges them into a single file
myMergedData<-fread(here('DataFiles/Clean Files','Mergeddata2018.csv'))
#The following code reads each one of the individual files and merges them into a single file
myMergedData<-fread(here('DataFiles/Clean Files','Mergeddata2018.csv'))
mapready<-myMergedData%>%select(coded_month,description,x_coord,y_coord,count)
View(mapready)
test<-mapready%>%filter(count!=-1)
#----------The following Script reads each of the individual files and stores them in a format that can be used by ggmap---------
#loading Required Library's
library(dplyr)
library(data.table)
library(sf)
library(tidyverse)
library(ggmap)
library(here)
library(compstatr)
library(mapview)
#The following code reads each one of the individual files and merges them into a single file
myMergedData<-fread(here('DataFiles/Clean Files','Mergeddata2018.csv'))
mapready<-myMergedData%>%select(coded_month,description,x_coord,y_coord,count)
#Getting rid of rows that contain -1 in count indicating that the incident was unfounded--------------------
mapready<-mapready%>%filter(count!=-1)
mapready<-mapready%>%filter(x_coord!=0)
mapready_sf<-st_as_sf(mapready,coords = c("x_coord","y_coord"),crs=102696) # This sets the x and y to spatial coordinates.
my_latlon_df <- st_transform(mapready_sf, crs = 4326 )  #re-project into a geographic system like WGS84 to convert to lat long
my_latlon_df <- my_latlon_df%>%
mutate( lat= st_coordinates(my_latlon_df)[,1],
lon = st_coordinates(my_latlon_df)[,2])%>%select(-geometry)
write.csv(my_latlon_df,here('DataFiles/Results/mapdata.csv'),row.names = F)
View(mapready)
#loading Required Library's
library(dplyr)
library(data.table)
library(sf)
library(tidyverse)
library(ggmap)
library(here)
library(compstatr)
library(mapview)
#The following code reads each one of the individual files and merges them into a single file
myMergedData<-fread(here('DataFiles/Clean Files','Mergeddata2018.csv'))
mapready<-myMergedData%>%select(coded_month,description,x_coord,y_coord,count)
mapready<-mapready%>%filter(count!=-1)%>%select(-count)
View(mapready)
mapready<-mapready%>%filter(x_coord!=0)
mapready_sf<-st_as_sf(mapready,coords = c("x_coord","y_coord"),crs=102696) # This sets the x and y to spatial coordinates.
my_latlon_df <- st_transform(mapready_sf, crs = 4326 )  #re-project into a geographic system like WGS84 to convert to lat long
my_latlon_df <- my_latlon_df%>%
mutate( lat= st_coordinates(my_latlon_df)[,1],
lon = st_coordinates(my_latlon_df)[,2])%>%select(-geometry)
View(my_latlon_df)
mapview(my_latlon_df)
mapview(head(my_latlon_df))
mapview(head(my_latlon_df,20))
mapview(head(my_latlon_df,20),zcol=description)
View(my_latlon_df)
my_latlon_df<-head(my_latlon_df,20)
mapview(my_latlon_df,zcol = "description")
mapview(my_latlon_df,zcol = "description",burst = TRUE)
my_latlon_df<-head(my_latlon_df,100)
mapview(my_latlon_df,zcol = "description",burst = TRUE)
my_latlon_df<-head(my_latlon_df,100)
my_latlon_df<-head(my_latlon_df,50)
my_latlon_df<-head(my_latlon_df,50)
my_latlon_df<-head(my_latlon_df,50)
#----------The following Script reads each of the individual files and stores them in a format that can be used by ggmap---------
#loading Required Library's
library(dplyr)
library(data.table)
library(sf)
library(tidyverse)
library(ggmap)
library(here)
library(compstatr)
library(mapview)
#The following code reads each one of the individual files and merges them into a single file
myMergedData<-fread(here('DataFiles/Clean Files','Mergeddata2018.csv'))
mapready<-myMergedData%>%select(coded_month,description,x_coord,y_coord,count)
#Getting rid of rows that contain -1 in count indicating that the incident was unfounded--------------------
mapready<-mapready%>%filter(count!=-1)%>%select(-count)
#Getting rid of values where the coordinate values are missing
mapready<-mapready%>%filter(x_coord!=0)
mapready_sf<-st_as_sf(mapready,coords = c("x_coord","y_coord"),crs=102696) # This sets the x and y to spatial coordinates.
my_latlon_df <- st_transform(mapready_sf, crs = 4326 )  #re-project into a geographic system like WGS84 to convert to lat long
my_latlon_df <- my_latlon_df%>%
mutate( lat= st_coordinates(my_latlon_df)[,1],
lon = st_coordinates(my_latlon_df)[,2])%>%select(-geometry)
my_latlon_df<-head(my_latlon_df,50)
mapview(my_latlon_df,zcol = "description",burst = TRUE)
mapview(my_latlon_df,zcol = "description",burst = F)
source('C:/Users/Gunathilakel/Desktop/STL-Public-Crime-Data/R Scripts/2-Mapping-Script.R', echo=TRUE)
library('sf')
library('mapview')
library('ggmap')
library('mapview')
#----------The following Script reads each of the individual files and stores them in a format that can be used by ggmap---------
#loading Required Library's
library(dplyr)
library(data.table)
library(sf)
library(tidyverse)
library(ggmap)
library(here)
library(compstatr)
library(mapview)
#The following code reads each one of the individual files and merges them into a single file
myMergedData<-fread(here('DataFiles/Clean Files','Mergeddata2018.csv'))
mapready<-myMergedData%>%select(coded_month,description,x_coord,y_coord,count)
#Getting rid of rows that contain -1 in count indicating that the incident was unfounded--------------------
mapready<-mapready%>%filter(count!=-1)%>%select(-count)
#Getting rid of values where the coordinate values are missing
mapready<-mapready%>%filter(x_coord!=0)
mapready_sf<-st_as_sf(mapready,coords = c("x_coord","y_coord"),crs=102696) # This sets the x and y to spatial coordinates.
my_latlon_df <- st_transform(mapready_sf, crs = 4326 )  #re-project into a geographic system like WGS84 to convert to lat long
my_latlon_df <- my_latlon_df%>%
mutate( lat= st_coordinates(my_latlon_df)[,1],
lon = st_coordinates(my_latlon_df)[,2])%>%select(-geometry)
write.csv(my_latlon_df,here('DataFiles/Results/mapdata.csv'),row.names = F)
my_latlon_df<-head(my_latlon_df,50)
mapview(my_latlon_df,zcol = "description",burst = F)
View(my_latlon_df)
#----------The following Script reads each of the individual files and stores them in a format that can be used by ggmap---------
#loading Required Library's
library(dplyr)
library(data.table)
library(sf)
library(tidyverse)
library(ggmap)
library(here)
library(compstatr)
library(mapview)
#The following code reads each one of the individual files and merges them into a single file
myMergedData<-fread(here('DataFiles/Clean Files','Mergeddata2018.csv'))
View(myMergedData)
#----------The following Script reads each of the individual files and stores them in a format that can be used by ggmap---------
#loading Required Library's
library(dplyr)
library(data.table)
library(sf)
library(tidyverse)
library(ggmap)
library(here)
library(compstatr)
library(mapview)
#The following code reads each one of the individual files and merges them into a single file
myMergedData<-fread(here('DataFiles/Clean Files','Mergeddata2018.csv'))
View(myMergedData)
df<-head(myMergedData,10)
View(df)
df$crime[,4]
df$crime
df$crime[,1]
df$crime[1]
df$crime[[1]]
df$crime[[,1]]
df$crime[1]
df$crime[]
unlist(df$crime)
unlist(df$crime)[,1]
unlist(df$crime)[1]
unlist(df$crime)[1][1]
unlist(df$crime)[1][,1]
unlist(df$crime)[,1][1]
unlist(df$crime)[1,][1]
as.character(df$crime)
df<-as.character(df$crime)
df<-head(myMergedData,10)
v<-as.character(df$crime)
substr(v, start = 1, stop = 2)
substr(v, start = 1, stop = 1)
View(df)
setdiff(v)
?setdiff
